% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imputef.R
\name{mvi}
\alias{mvi}
\title{mvi}
\usage{
mvi(fname, 
       min_coverage=0,
       min_allele_frequency=0.0001,
       max_missingness_rate_per_locus=1.00,
       pool_sizes=c(100),
       min_depth_below_which_are_missing=1,
       max_depth_above_which_are_missing=1000000,
       frac_top_missing_pools=0.0,
       frac_top_missing_loci=0.0,
       n_threads=2,
       fname_out_prefix="")
}
\arguments{
\item{fname}{filename of the uncompressed vcf file which has the AD (allele depth) field and may or may not have genotypes called (e.g. generated via \verb{bctools mpileup -a AD,DP ...}). If the GT field is present but the AD field is absent, then each sample is assumed to be an individual diploid, i.e., neither a polyploid nor a pool.}

\item{min_coverage}{minimum coverage per locus, i.e. if at a locus, a pool falls below this value (does not skip missing data, i.e. missing locus has a depth of zero), then the whole locus is omitted. Set this to zero if the vcf has been filtered and contains missing values, i.e. \code{./.} or \code{.|.}. \link{Default=0}}

\item{min_allele_frequency}{minimum allele frequency per locus, i.e. if at a locus, a pool has all its alleles below this value and/or above the additive complement of this value (skipping missing data), then the entire locus is omitted. \link{Default=0.0001}}

\item{max_missingness_rate_per_locus}{maximum fraction of pools missing per locus, i.e. if at a locus, there were more pools missing than the coverage dictated by this threshold, then the locus is omitted. \link{Default=1.00}}

\item{pool_sizes}{vector of pool sizes, i.e. the number of individuals included in each pool, or can be set to an arbitrarily large value like 100 for individual polyploids or if allele frequency estimates are expected to be accurate. \link{Default=100}}

\item{min_depth_below_which_are_missing}{minimum depth at which loci with depth below this threshold are set to missing. Set to one if the input vcf has already been filtered and the loci beyond the depth thresholds have been set to missing, otherwise set to an integer above zero. \link{Default=1}}

\item{max_depth_above_which_are_missing}{maximum depth at which loci with depth above this threshold are set to missing. Set to some large arbitrarily large value (e.g. 1000000) if the input vcf has already been filtered and the loci beyond the depth thresholds have been set to missing, otherwise set to an integer above zero. \link{Default=1000000}}

\item{frac_top_missing_pools}{fraction of pools with the highest number of missing loci to be omitted. Set to zero if the input vcf has already been filtered and the loci beyond the depth thresholds have been set to missing, otherwise set to a decimal number between zero and one. \link{Default=0.0}}

\item{frac_top_missing_loci}{fraction of loci with the highest number of pools with missing data to be omitted. Set to zero if the input vcf has already been filtered and the loci beyond the depth thresholds have been set to missing, otherwise set to an decimal number between zero and one. \link{Default=0.0}}

\item{n_threads}{number of computing threads or processor cores to use in the computations. \link{Default=2}}

\item{fname_out_prefix}{prefix of the output files (sync and csv files). \link{Default="" which will use the entire name of the input vcf file as the prefix}}
}
\value{
sync file:
\itemize{
\item filename: <fname_out_prefix>-\if{html}{\out{<time>}}.sync
\item an extension of \href{https://academic.oup.com/bioinformatics/article/27/24/3435/306737}{popoolation2's} sync or synchronised pileup file format, which includes a header line prepended by '#' showing the names of each column including the names of each pool. Additional header line/s and comments prepended with '#' may be added anywhere within the file.
}
\itemize{
\item \emph{Header line/s}:  optional header line/s including the names of the pools, e.g. \verb{# chr pos ref pool1 pool2 pool3 pool4 pool5}
\item \emph{Column 1}:       chromosome or scaffold name
\item \emph{Column 2}:       locus position
\item \emph{Column 3}:       reference allele, e.g. A, T, C, G
\item \emph{Column/s 4 to n}:  colon-delimited allele counts: A:T:C:G:DEL:N, where "DEL" refers to insertion/deletion, and "N" is unclassified. A pool or population or polyploid individual is represented by a single column of this colon-delimited allele counts.
}

imputed allele frequencies:
\itemize{
\item filename: <fname_out_prefix>-\if{html}{\out{<time>}}-<random_id>-IMPUTED.csv
\item comma-separated file
\item header: \verb{ #chr,pos,allele,<pool_names>,...}
\item each locus is represented by 2 or more rows, i.e. 2 for biallelic loci, and >2 for multi-allelic loci
}
}
\description{
Mean value imputation of allele frequencies
}
\details{
This mean value imputation method simply uses the arithmetic mean of the allele frequencies across all non-missing samples to impute missing data.
This function prints out the expected mean absolute error (MAE) of the imputation using 10\% simulated missing data. Repeat the imputation manually to get a range of these MAEs for a better estimate of the expected MAE.
This function does not import any genotype data into R. Most processes are multi-threaded and outputs are written into disk as text files, i.e. sync file, and csv file of imputed allele frequencies.
It converts vcf into sync with locus filtering based on minimum depth, minimum allele frequency, and maximum missingness rate with minimal memory footprint as large vcf files are split into chunks equivalent to the number of threads and processed line-by-line.
The allele depth information (AD), i.e. the unfiltered allele depth which includes the reads which did not pass the variant caller filters are used to calculate allele frequencies.
The genotype calls (GT), if present are not used, hence the variant caller filtering is unimportant as only the allele frequencies are extracted from the the vcf file.
However, if the AD information is absent then the GT information will be used assuming that each sample is an individual diploid, i.e., neither a polyploid nor a pool.
The entire sync file is then loaded into memory and imputed in parallel across windows.
The structs, traits, methods, and functions defined in this library are subsets of \href{https://github.com/jeffersonfparil/poolgen}{poolgen}, and will eventually be merged with it.
}
